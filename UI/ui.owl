Prefix(:=<http://onto.ir/ontologies/2013/8/ui#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://onto.ir/ontologies/2013/8/ui>
Annotation(<http://onto.fuschia.us/2013/8/ui#author> "Morteza Ansarinia <ansarinia@me.com>")

Declaration(Class(:API))
AnnotationAssertion(rdfs:label :API "api")
SubClassOf(:API :Behavior)
Declaration(Class(:Accordion))
AnnotationAssertion(rdfs:label :Accordion "accordion")
SubClassOf(:Accordion :UIModule)
Declaration(Class(:ActiveState))
AnnotationAssertion(rdfs:label :ActiveState "active")
SubClassOf(:ActiveState :State)
Declaration(Class(:BasicIcon))
AnnotationAssertion(rdfs:label :BasicIcon "basicicon")
SubClassOf(:BasicIcon :UIElement)
Declaration(Class(:Behavior))
AnnotationAssertion(rdfs:label :Behavior "behavior")
SubClassOf(:Behavior :Function)
Declaration(Class(:Black))
SubClassOf(:Black :Color)
Declaration(Class(:Blue))
SubClassOf(:Blue :Color)
Declaration(Class(:Breadcrumb))
AnnotationAssertion(rdfs:label :Breadcrumb "breadcrumb")
SubClassOf(:Breadcrumb :UICollection)
Declaration(Class(:Button))
AnnotationAssertion(rdfs:label :Button "button")
SubClassOf(:Button :UIElement)
Declaration(Class(:CallbackFunction))
SubClassOf(:CallbackFunction :Function)
Declaration(Class(:ChatRoom))
AnnotationAssertion(rdfs:label :ChatRoom "chatroom")
SubClassOf(:ChatRoom :UIModule)
Declaration(Class(:CheckBox))
AnnotationAssertion(rdfs:label :CheckBox "checkbox")
SubClassOf(:CheckBox :UIModule)
Declaration(Class(:Color))
AnnotationAssertion(rdfs:label :Color "color")
SubClassOf(:Color :Variation)
Declaration(Class(:ColorizeBehavior))
AnnotationAssertion(rdfs:label :ColorizeBehavior "colorize")
SubClassOf(:ColorizeBehavior :Behavior)
Declaration(Class(:Column))
AnnotationAssertion(rdfs:label :Column "column")
SubClassOf(:Column :UIElement)
Declaration(Class(:Comment))
AnnotationAssertion(rdfs:label :Comment "comment")
SubClassOf(:Comment :UIView)
Declaration(Class(:Context))
Declaration(Class(:Dimmer))
AnnotationAssertion(rdfs:label :Dimmer "dimmer")
SubClassOf(:Dimmer :UIModule)
Declaration(Class(:DisabledState))
AnnotationAssertion(rdfs:label :DisabledState "diabled")
SubClassOf(:DisabledState :State)
Declaration(Class(:Divider))
AnnotationAssertion(rdfs:label :Divider "divider")
SubClassOf(:Divider :UIElement)
Declaration(Class(:DownState))
AnnotationAssertion(rdfs:label :DownState "down")
SubClassOf(:DownState :State)
Declaration(Class(:DropDown))
AnnotationAssertion(rdfs:label :DropDown "dropdown")
SubClassOf(:DropDown :UIModule)
Declaration(Class(:Feed))
AnnotationAssertion(rdfs:label :Feed "feed")
SubClassOf(:Feed :UIView)
Declaration(Class(:Form))
AnnotationAssertion(rdfs:label :Form "form")
SubClassOf(:Form :UICollection)
Declaration(Class(:Function))
Declaration(Class(:Green))
SubClassOf(:Green :Color)
Declaration(Class(:Grid))
AnnotationAssertion(rdfs:label :Grid "grid")
SubClassOf(:Grid :UICollection)
Declaration(Class(:HTML5Input))
AnnotationAssertion(rdfs:label :HTML5Input "input")
SubClassOf(:HTML5Input :HTMLContext)
Declaration(Class(:HTMLContext))
SubClassOf(:HTMLContext :Context)
Declaration(Class(:HTMLDiv))
SubClassOf(:HTMLDiv :HTMLContext)
Declaration(Class(:Header))
AnnotationAssertion(rdfs:label :Header "header")
SubClassOf(:Header :UIElement)
Declaration(Class(:HoverState))
AnnotationAssertion(rdfs:label :HoverState "hover")
SubClassOf(:HoverState :State)
Declaration(Class(:Icon))
AnnotationAssertion(rdfs:label :Icon "icon")
SubClassOf(:Icon :UIElement)
Declaration(Class(:Image))
AnnotationAssertion(rdfs:label :Image "image")
SubClassOf(:Image :UIElement)
Declaration(Class(:Input))
AnnotationAssertion(rdfs:label :Input "input")
SubClassOf(:Input :UIElement)
Declaration(Class(:Inverted))
AnnotationAssertion(rdfs:label :Inverted "inverted")
SubClassOf(:Inverted :Variation)
Declaration(Class(:InvertedMenu))
EquivalentClasses(:InvertedMenu ObjectIntersectionOf(ObjectSomeValuesFrom(:hasVariation :Inverted) :Menu))
Declaration(Class(:Item))
AnnotationAssertion(rdfs:label :Item "item")
SubClassOf(:Item :UIView)
Declaration(Class(:Label))
AnnotationAssertion(rdfs:label :Label "label")
SubClassOf(:Label :UIElement)
Declaration(Class(:Loader))
AnnotationAssertion(rdfs:label :Loader "loader")
SubClassOf(:Loader :UIElement)
Declaration(Class(:LoadingState))
AnnotationAssertion(rdfs:label :LoadingState "loading")
SubClassOf(:LoadingState :State)
Declaration(Class(:Menu))
AnnotationAssertion(rdfs:label :Menu "menu")
SubClassOf(:Menu :UICollection)
Declaration(Class(:Message))
AnnotationAssertion(rdfs:label :Message "message")
SubClassOf(:Message :UICollection)
Declaration(Class(:Modal))
AnnotationAssertion(rdfs:label :Modal "modal")
SubClassOf(:Modal :UIModule)
Declaration(Class(:Nag))
AnnotationAssertion(rdfs:label :Nag "nag")
SubClassOf(:Nag :UIModule)
Declaration(Class(:OnChange))
SubClassOf(:OnChange :CallbackFunction)
Declaration(Class(:OnClick))
SubClassOf(:OnClick :CallbackFunction)
Declaration(Class(:OnDisable))
SubClassOf(:OnDisable :CallbackFunction)
Declaration(Class(:OnEnable))
SubClassOf(:OnEnable :CallbackFunction)
Declaration(Class(:PopUp))
AnnotationAssertion(rdfs:label :PopUp "popup")
SubClassOf(:PopUp :UIModule)
Declaration(Class(:Progress))
AnnotationAssertion(rdfs:label :Progress "progress")
SubClassOf(:Progress :UIElement)
Declaration(Class(:Rating))
AnnotationAssertion(rdfs:label :Rating "rating")
SubClassOf(:Rating :UIModule)
Declaration(Class(:Red))
SubClassOf(:Red :Color)
Declaration(Class(:Reveal))
AnnotationAssertion(rdfs:label :Reveal "reveal")
SubClassOf(:Reveal :UIModule)
Declaration(Class(:Search))
AnnotationAssertion(rdfs:label :Search "search")
SubClassOf(:Search :UIModule)
Declaration(Class(:Segment))
AnnotationAssertion(rdfs:label :Segment "segment")
SubClassOf(:Segment :UIElement)
Declaration(Class(:Shape))
AnnotationAssertion(rdfs:label :Shape "shape")
SubClassOf(:Shape :UIModule)
Declaration(Class(:SideBar))
AnnotationAssertion(rdfs:label :SideBar "sidebar")
SubClassOf(:SideBar :UIModule)
Declaration(Class(:Size))
AnnotationAssertion(rdfs:label :Size "size")
SubClassOf(:Size :Variation)
Declaration(Class(:State))
AnnotationAssertion(rdfs:label :State "state")
SubClassOf(:State :Function)
Declaration(Class(:Statistic))
AnnotationAssertion(rdfs:label :Statistic "statistic")
SubClassOf(:Statistic :UIView)
Declaration(Class(:Step))
AnnotationAssertion(rdfs:label :Step "step")
SubClassOf(:Step :UIElement)
Declaration(Class(:Tab))
AnnotationAssertion(rdfs:label :Tab "tab")
SubClassOf(:Tab :UIModule)
Declaration(Class(:Table))
AnnotationAssertion(rdfs:label :Table "table")
SubClassOf(:Table :UICollection)
Declaration(Class(:Tiered))
SubClassOf(:Tiered :Variation)
Declaration(Class(:Transition))
AnnotationAssertion(rdfs:label :Transition "transition")
SubClassOf(:Transition :UIModule)
Declaration(Class(:UI))
AnnotationAssertion(rdfs:label :UI "ui")
Declaration(Class(:UICollection))
AnnotationAssertion(:description :UICollection "UI Collections are groups of heterogeneous page elements which are usually found together. Carrying the chemistry metaphor, these can be thought of as molecules.

UI collections have a definition of elements that exist, or could exist inside of them. They do not usually require all elements to be found, but they describe a list of the \"usual suspects\". Unlike elements definitions, collections are not typically useful to define in plural.")
AnnotationAssertion(rdfs:label :UICollection "collection")
SubClassOf(:UICollection :UI)
Declaration(Class(:UIElement))
AnnotationAssertion(:description :UIElement "An element definition gives states which an elements can occupy, common types of that element, and if necessary, defines how the element functions in groups.")
AnnotationAssertion(rdfs:label :UIElement "element")
AnnotationAssertion(:description :UIElement "UI Elements are page elements which are indivisible. This can be thought of as similar in definition as an \"element\" in chemistry.

UI elements can have plural definitions when they are known to exist together in groups. Plural variations allow you to only specify qualities once, allowing them to be inferred across all members of a group.")
SubClassOf(:UIElement :UI)
Declaration(Class(:UIModule))
AnnotationAssertion(rdfs:label :UIModule "module")
AnnotationAssertion(:description :UIModule "UI modules are elements where it's behavior is a fundamental part of its definition. UI Modules are dependent on the javascript which carry their definition. They also may be more complex, and have a variety of different functions. Further abusing the scientific analogy: These can be thought of as \"organs\".")
SubClassOf(:UIModule :UI)
Declaration(Class(:UIView))
AnnotationAssertion(:description :UIView "UI Views are common ways to structure types of content so that it can be understood more easily. A view's definition in semantic only describes the content which typically occupies the view.")
AnnotationAssertion(rdfs:label :UIView "view")
SubClassOf(:UIView :UI)
Declaration(Class(:ValidateForm))
AnnotationAssertion(rdfs:label :ValidateForm "validate form")
SubClassOf(:ValidateForm :Behavior)
Declaration(Class(:Variation))
SubClassOf(:Variation :Function)
Declaration(Class(:Video))
AnnotationAssertion(rdfs:label :Video "video")
SubClassOf(:Video :UIModule)
Declaration(Class(:White))
SubClassOf(:White :Color)
Declaration(ObjectProperty(:hasContext))
ObjectPropertyDomain(:hasContext :UI)
Declaration(ObjectProperty(:hasState))
ObjectPropertyDomain(:hasState :UI)
ObjectPropertyRange(:hasState :State)
Declaration(ObjectProperty(:hasVariation))
ObjectPropertyDomain(:hasVariation :UI)
ObjectPropertyRange(:hasVariation :Variation)
Declaration(DataProperty(:hasColumns))
FunctionalDataProperty(:hasColumns)
DataPropertyDomain(:hasColumns :Grid)
DataPropertyRange(:hasColumns xsd:positiveInteger)
Declaration(AnnotationProperty(:author))
SubAnnotationPropertyOf(:author rdfs:comment)
Declaration(AnnotationProperty(:description))
SubAnnotationPropertyOf(:description rdfs:comment)
DisjointClasses(:ActiveState :DisabledState :DownState :HoverState :LoadingState)
)
